---
swagger: "2.0"
info:
  description: Kiko test api. Because of lack of authorization. Current tenant id will be landlord
  version: 1.0.0
  title: Kiko test api
paths:
  /timeslot:
    get:
      summary: filter timeslots
      produces:
      - application/json
      parameters:
      - name: from
        in: query
        description: from filtering date in unix seconds
        required: false
        type: integer
        default: 0
        minimum: 0
      - name: to
        in: query
        description: to filtering date in unix seconds
        required: false
        type: integer
        default: 0
        minimum: 0
        format: int32
      - name: tenantIds
        in: query
        description: filter by tenantids comma separated
        required: false
        type: string
      - name: freeOnly
        in: query
        description: return only available timeslots. Ignored when tenantIds provided
        required: false
        type: boolean
        default: false
      - name: page
        in: query
        description: page of pagintaion response
        required: false
        type: integer
        default: 0
      - name: pageSize
        in: query
        description: page of pagintaion response
        required: false
        type: integer
        default: 20
      responses:
        200:
          description: search results matching criteria
          headers:
            X-Total-Pages:
              type: integer
              description: Total pages
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeSlot'
  /timeslot/{time}:
    get:
      summary: get timeslot by identifier
      parameters:
      - name: time
        in: path
        description: timeslot time
        required: true
        type: integer
      responses:
        200:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/TimeSlot'
    put:
      summary: reserve timeslot by tenant
      parameters:
      - name: time
        in: path
        description: timeslot time
        required: true
        type: integer
      - name: tenantId
        in: query
        description: new tenant id
        required: false
        type: string
        format: int32
      responses:
        200:
          description: returned timeslot
          schema:
            $ref: '#/definitions/TimeSlot'
        403:
          description: if timeslot blocked or reserved or out of range
    delete:
      summary: cancel reservation by tenant id
      parameters:
      - name: time
        in: path
        description: timeslot time
        required: true
        type: integer
      - name: tenantId
        in: query
        description: new tenant or current tenant id. If current then it will be blocked
        required: false
        type: string
        format: int32
      responses:
        200:
          description: returned timeslot
        403:
          description: if timeslot reserved by another tenant except it called by current
        404:
          description: if timeslot os available or out of range
definitions:
  TimeSlot:
    type: object
    required:
    - date
    - id
    - status
    properties:
      id:
        type: integer
      date:
        type: integer
      duration:
        type: integer
      status:
        type: string
        enum:
        - BLOCKED
        - VACANT
        - RESERVED
      tenantId:
        type: string
        example: date-time


